name: Secret Scanning

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  secret-scan:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Full history for better detection

    - name: TruffleHog Secret Scanning
      uses: trufflesecurity/trufflehog@main
      with:
        path: ./
        base: ${{ github.event.repository.default_branch }}
        head: HEAD
        extra_args: --debug --only-verified

    - name: Detect Secrets
      uses: reviewdog/action-detect-secrets@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        reporter: github-pr-review
        fail_on_error: true
        detect_secrets_flags: --exclude-files '\.lock$|\.yaml$|\.yml$'

    - name: GitLeaks
      uses: gitleaks/gitleaks-action@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GITLEAKS_LICENSE: ${{ secrets.GITLEAKS_LICENSE }}
      with:
        args: --verbose --redact

    - name: Check for hardcoded secrets in code
      run: |
        # Check for potential JWT tokens
        if grep -r "eyJ[A-Za-z0-9_-]*\.[A-Za-z0-9_-]*\.[A-Za-z0-9_-]*" --include="*.ts" --include="*.tsx" --include="*.js" --include="*.jsx" --exclude-dir=node_modules --exclude-dir=.next .; then
          echo "❌ Potential JWT tokens found in code!"
          exit 1
        fi

        # Check for API keys
        if grep -r -E "(api[_-]?key|apikey|api_secret|secret[_-]?key)" --include="*.ts" --include="*.tsx" --include="*.js" --include="*.jsx" --exclude-dir=node_modules --exclude-dir=.next . | grep -v -E "(process\.env|import\.meta\.env|getenv|example|template|placeholder|your-|<.*>)"; then
          echo "❌ Potential hardcoded API keys found!"
          exit 1
        fi

        echo "✅ No hardcoded secrets detected"