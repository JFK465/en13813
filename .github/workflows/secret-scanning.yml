name: Secret Scanning

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  secret-scan:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Full history for better detection

    - name: TruffleHog Secret Scanning
      uses: trufflesecurity/trufflehog@main
      with:
        path: ./
        base: ${{ github.event_name == 'pull_request' && github.event.pull_request.base.sha || (github.event.before != '0000000000000000000000000000000000000000' && github.event.before || github.event.repository.default_branch) }}
        head: ${{ github.event_name == 'pull_request' && github.event.pull_request.head.sha || 'HEAD' }}
        extra_args: --debug --only-verified
      continue-on-error: true  # Don't fail on first commit or when BASE equals HEAD

    - name: Detect Secrets
      uses: reviewdog/action-detect-secrets@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        reporter: github-pr-review
        fail_on_error: true
        detect_secrets_flags: --exclude-files '\.lock$|\.yaml$|\.yml$'

    - name: GitLeaks
      uses: gitleaks/gitleaks-action@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GITLEAKS_LICENSE: ${{ secrets.GITLEAKS_LICENSE }}
      with:
        args: --verbose --redact

    # Custom secret checks disabled - relying on professional scanners above
    # (TruffleHog, Detect Secrets, GitLeaks)
    # These tools have better false-positive handling and are maintained by security experts

    # - name: Check for hardcoded secrets in code
    #   run: |
    #     # Check for potential JWT tokens
    #     if grep -r "eyJ[A-Za-z0-9_-]*\.[A-Za-z0-9_-]*\.[A-Za-z0-9_-]*" --include="*.ts" --include="*.tsx" --include="*.js" --include="*.jsx" --exclude-dir=node_modules --exclude-dir=.next .; then
    #       echo "❌ Potential JWT tokens found in code!"
    #       exit 1
    #     fi
    #
    #     # Check for API keys
    #     if grep -r -E "(api[_-]?key|apikey|api_secret|secret[_-]?key)" --include="*.ts" --include="*.tsx" --include="*.js" --include="*.jsx" --exclude-dir=node_modules --exclude-dir=.next . | \
    #        grep -v -E "(process\.env|import\.meta\.env|getenv|example|template|placeholder|your-|<.*>)" | \
    #        grep -v -E "(/api/v1/api-keys|\.from\('api_keys'\)|permissions:.*api_keys|api_key:.*//.*comment|'api_key=\[REDACTED\]'|/api_key=\[.*\]/|createCalendarSubscriptionUrl\(.*'api-key')" | \
    #        grep -v -E "(Authorization:.*\*\*\*|API key authentication|openapi-schema\.ts:|run-migration\.js:.*apikey.*:|sentry.*config.*api_key.*REDACTED)"; then
    #       echo "❌ Potential hardcoded API keys found!"
    #       exit 1
    #     fi
    #
    #     echo "✅ No hardcoded secrets detected"